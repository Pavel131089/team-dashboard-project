{"version":3,"file":"AuthGuard-D5Q4ybht.js","sources":["../../../../src/components/auth/AuthGuard.tsx"],"sourcesContent":["import { ReactNode, useEffect, useState } from \"react\";\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport { UserRole } from \"@/hooks/useAuth\";\nimport { sessionService } from \"@/services/auth/sessionService\";\n\ninterface AuthGuardProps {\n  children: ReactNode;\n  requiredRole: UserRole;\n}\n\n/**\n * Компонент для защиты маршрутов, требующих аутентификации\n * Проверяет наличие сессии пользователя и соответствие роли\n */\nconst AuthGuard = ({ children, requiredRole }: AuthGuardProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [userRole, setUserRole] = useState<UserRole | null>(null);\n  const [redirectPath, setRedirectPath] = useState<string | null>(null);\n\n  // Проверяем сессию пользователя при монтировании компонента\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const session = sessionService.getCurrentSession();\n        console.log(\"AuthGuard: проверка сессии\", session);\n\n        if (!session || !session.isAuthenticated) {\n          console.log(\"AuthGuard: пользователь не аутентифицирован\");\n          setIsAuthenticated(false);\n          setRedirectPath(\"/login\");\n          return;\n        }\n\n        console.log(\n          \"AuthGuard: пользователь аутентифицирован, роль:\",\n          session.role,\n        );\n        setIsAuthenticated(true);\n        setUserRole(session.role as UserRole);\n\n        // Проверяем соответствие роли\n        if (session.role !== requiredRole) {\n          console.log(\n            `AuthGuard: роль не соответствует требуемой (${requiredRole})`,\n          );\n          const path = session.role === \"manager\" ? \"/dashboard\" : \"/employee\";\n          setRedirectPath(path);\n        } else {\n          console.log(\"AuthGuard: роль соответствует требуемой\");\n          // Если роль соответствует, обнуляем путь перенаправления\n          setRedirectPath(null);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при проверке аутентификации:\", error);\n        setIsAuthenticated(false);\n        setRedirectPath(\"/login\");\n      }\n    };\n\n    checkAuth();\n  }, [requiredRole]);\n\n  // Выполняем перенаправление через императивный navigate вместо Navigate\n  useEffect(() => {\n    if (redirectPath) {\n      console.log(\"AuthGuard: перенаправление на\", redirectPath);\n      navigate(redirectPath, { replace: true });\n    }\n  }, [redirectPath, navigate]);\n\n  // Если проверка еще не завершена, возвращаем индикатор загрузки\n  if (isAuthenticated === null) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-pulse\">Проверка авторизации...</div>\n      </div>\n    );\n  }\n\n  // Если пользователь аутентифицирован и имеет нужную роль, показываем защищенный контент\n  if (isAuthenticated && userRole === requiredRole) {\n    console.log(\"AuthGuard: показываем защищенный контент\");\n    return <>{children}</>;\n  }\n\n  // По умолчанию показываем индикатор загрузки,\n  // т.к. перенаправление выполняется через useEffect\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"animate-pulse\">Перенаправление...</div>\n    </div>\n  );\n};\n\nexport default AuthGuard;\n"],"names":["AuthGuard","children","requiredRole","useLocation","navigate","useNavigate","isAuthenticated","setIsAuthenticated","useState","userRole","setUserRole","redirectPath","setRedirectPath","useEffect","session","sessionService","path","error","jsx"],"mappings":"+HAcA,MAAMA,EAAY,CAAC,CAAE,SAAAC,EAAU,aAAAC,KAAmC,CAC/CC,EAAY,EAC7B,MAAMC,EAAWC,EAAY,EACvB,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAyB,IAAI,EACrE,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAA0B,IAAI,EACxD,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAwB,IAAI,EAsDpE,OAnDAK,EAAAA,UAAU,IAAM,EACI,IAAM,CAClB,GAAA,CACI,MAAAC,EAAUC,EAAe,kBAAkB,EAGjD,GAFQ,QAAA,IAAI,6BAA8BD,CAAO,EAE7C,CAACA,GAAW,CAACA,EAAQ,gBAAiB,CACxC,QAAQ,IAAI,6CAA6C,EACzDP,EAAmB,EAAK,EACxBK,EAAgB,QAAQ,EACxB,MAAA,CAWE,GARI,QAAA,IACN,kDACAE,EAAQ,IACV,EACAP,EAAmB,EAAI,EACvBG,EAAYI,EAAQ,IAAgB,EAGhCA,EAAQ,OAASZ,EAAc,CACzB,QAAA,IACN,+CAA+CA,CAAY,GAC7D,EACA,MAAMc,EAAOF,EAAQ,OAAS,UAAY,aAAe,YACzDF,EAAgBI,CAAI,CAAA,MAEpB,QAAQ,IAAI,yCAAyC,EAErDJ,EAAgB,IAAI,QAEfK,EAAO,CACN,QAAA,MAAM,sCAAuCA,CAAK,EAC1DV,EAAmB,EAAK,EACxBK,EAAgB,QAAQ,CAAA,CAE5B,GAEU,CAAA,EACT,CAACV,CAAY,CAAC,EAGjBW,EAAAA,UAAU,IAAM,CACVF,IACM,QAAA,IAAI,gCAAiCA,CAAY,EACzDP,EAASO,EAAc,CAAE,QAAS,EAAA,CAAM,EAC1C,EACC,CAACA,EAAcP,CAAQ,CAAC,EAGvBE,IAAoB,KAEpBY,EAAA,IAAC,OAAI,UAAU,gDACb,eAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,yBAAA,CAAuB,CACxD,CAAA,EAKAZ,GAAmBG,IAAaP,GAClC,QAAQ,IAAI,0CAA0C,oBAC5C,SAAAD,EAAS,GAMnBiB,EAAA,IAAC,OAAI,UAAU,gDACb,eAAC,MAAI,CAAA,UAAU,gBAAgB,SAAA,oBAAA,CAAkB,CACnD,CAAA,CAEJ"}